<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	<!-- //Oracle 접속부분 -->
	<context:property-placeholder location="classpath:mybatis/jdbc.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
	</bean>
	<!-- 스프링 jdbc 즉 스프링으로 oracle 디비 연결 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/configuration.xml" />
	</bean>
	<bean id="session" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	<!-- transactionmanager 선언 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- Transaction 기본 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />
			<!-- name속성값을 *로 지정하면 모든 메서드에 적용 즉 어떠한 메서드를 사용해도 된다 . 트랜잭션 속성 REQUIRED 
				를 적용. 즉 값을 가져오는 역할을 함. -->
			<tx:method name="get*" read-only="true" />
			<!-- get 으로 시작하는 모든 메서드를 받아들인다. 그리고 단지 읽기 속성을 하기 위해서 true로 설정 -->
		</tx:attributes>
	</tx:advice>
	<!-- AOP 설정을 사용해서 Transaction 적용 -->
	<aop:config>
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* service.*Service.*(..))" />
		<!-- service 패키지의 Service 포함하는 모든 클래스,인터페이스의 모든 메서드를 포인트 컷 한다. -->
	</aop:config>


	<!-- MultipartResolver 설정 (file upload) -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize" value="100000000" />
	</bean>
	
	<!-- Mail 보내기 설정 -->
	<bean class="org.springframework.mail.javamail.JavaMailSenderImpl" id="mailSender">
		<property value="smtp.gmail.com" name="host" />
		<property value="587" name="port" />
		<property value="asparagus4486@gmail.com" name="username" />
		<property value="followme" name="password" />

		<!-- 각각의 Password -->
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.debug">true</prop>
			</props>
		</property>
	</bean>
	
	
	<!-- fileDownload bean  -->
	<bean id="fileDownloadView" class="oracle.java.s20180102.service.fileDownloadView"/>
	<bean id="fileViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
	    <property name="order" value="1"/>
	</bean>

	<!--컨트롤러 리턴시 다른것들보다 먼저 읽혀야 하기 때문에 order를 0과 1로 지정-->
	<bean class = "org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	    <property name = "order" value = "0" />
	</bean>
	<bean id="excelView" class="oracle.java.s20180102.service.ExcelView" />
 
	
</beans>